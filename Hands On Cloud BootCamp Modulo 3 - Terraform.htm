<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=Generator content="Microsoft Word 15 (filtered)">
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
@font-face
	{font-family:Aptos;}
@font-face
	{font-family:"Aptos Display";}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:11.35pt;
	line-height:107%;
	font-size:11.0pt;
	font-family:"Aptos",sans-serif;}
h1
	{mso-style-link:"Título 1 Char";
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:18.0pt;
	text-indent:-18.0pt;
	line-height:107%;
	page-break-after:avoid;
	font-size:12.0pt;
	font-family:"Aptos Display",sans-serif;
	color:#501549;
	font-weight:normal;}
h2
	{mso-style-link:"Título 2 Char";
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:67.05pt;
	text-indent:-18.0pt;
	line-height:107%;
	page-break-after:avoid;
	font-size:12.0pt;
	font-family:"Aptos Display",sans-serif;
	color:#501549;
	background:white;
	font-weight:normal;}
h3
	{mso-style-link:"Título 3 Char";
	margin-top:8.0pt;
	margin-right:0cm;
	margin-bottom:4.0pt;
	margin-left:11.35pt;
	line-height:107%;
	page-break-after:avoid;
	font-size:14.0pt;
	font-family:"Aptos",sans-serif;
	color:#0F4761;
	font-weight:normal;}
h4
	{mso-style-link:"Título 4 Char";
	margin-top:2.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:107.75pt;
	line-height:107%;
	page-break-after:avoid;
	font-size:8.0pt;
	font-family:"Aptos",sans-serif;
	color:#0F4761;
	font-weight:normal;}
h5
	{mso-style-link:"Título 5 Char";
	margin-top:4.0pt;
	margin-right:0cm;
	margin-bottom:2.0pt;
	margin-left:11.35pt;
	line-height:107%;
	page-break-after:avoid;
	font-size:11.0pt;
	font-family:"Aptos",sans-serif;
	color:#0F4761;
	font-weight:normal;}
h6
	{mso-style-link:"Título 6 Char";
	margin-top:2.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:11.35pt;
	line-height:107%;
	page-break-after:avoid;
	font-size:11.0pt;
	font-family:"Aptos",sans-serif;
	color:#595959;
	font-weight:normal;
	font-style:italic;}
p.MsoHeading7, li.MsoHeading7, div.MsoHeading7
	{mso-style-link:"Título 7 Char";
	margin-top:2.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:11.35pt;
	line-height:107%;
	page-break-after:avoid;
	font-size:11.0pt;
	font-family:"Aptos",sans-serif;
	color:#595959;}
p.MsoHeading8, li.MsoHeading8, div.MsoHeading8
	{mso-style-link:"Título 8 Char";
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:11.35pt;
	line-height:107%;
	page-break-after:avoid;
	font-size:11.0pt;
	font-family:"Aptos",sans-serif;
	color:#272727;
	font-style:italic;}
p.MsoHeading9, li.MsoHeading9, div.MsoHeading9
	{mso-style-link:"Título 9 Char";
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:11.35pt;
	line-height:107%;
	page-break-after:avoid;
	font-size:11.0pt;
	font-family:"Aptos",sans-serif;
	color:#272727;}
p.MsoToc1, li.MsoToc1, div.MsoToc1
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:5.0pt;
	margin-left:0cm;
	line-height:107%;
	font-size:11.0pt;
	font-family:"Aptos",sans-serif;}
p.MsoToc2, li.MsoToc2, div.MsoToc2
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:5.0pt;
	margin-left:11.0pt;
	line-height:107%;
	font-size:11.0pt;
	font-family:"Aptos",sans-serif;}
p.MsoHeader, li.MsoHeader, div.MsoHeader
	{mso-style-link:"Cabeçalho Char";
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:11.35pt;
	font-size:11.0pt;
	font-family:"Aptos",sans-serif;}
p.MsoFooter, li.MsoFooter, div.MsoFooter
	{mso-style-link:"Rodapé Char";
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:11.35pt;
	font-size:11.0pt;
	font-family:"Aptos",sans-serif;}
p.MsoTitle, li.MsoTitle, div.MsoTitle
	{mso-style-link:"Título Char";
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:4.0pt;
	margin-left:11.35pt;
	font-size:16.0pt;
	font-family:"Aptos Display",sans-serif;
	color:#002060;
	letter-spacing:-.5pt;}
p.MsoTitleCxSpFirst, li.MsoTitleCxSpFirst, div.MsoTitleCxSpFirst
	{mso-style-link:"Título Char";
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:11.35pt;
	font-size:16.0pt;
	font-family:"Aptos Display",sans-serif;
	color:#002060;
	letter-spacing:-.5pt;}
p.MsoTitleCxSpMiddle, li.MsoTitleCxSpMiddle, div.MsoTitleCxSpMiddle
	{mso-style-link:"Título Char";
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:11.35pt;
	font-size:16.0pt;
	font-family:"Aptos Display",sans-serif;
	color:#002060;
	letter-spacing:-.5pt;}
p.MsoTitleCxSpLast, li.MsoTitleCxSpLast, div.MsoTitleCxSpLast
	{mso-style-link:"Título Char";
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:4.0pt;
	margin-left:11.35pt;
	font-size:16.0pt;
	font-family:"Aptos Display",sans-serif;
	color:#002060;
	letter-spacing:-.5pt;}
p.MsoSubtitle, li.MsoSubtitle, div.MsoSubtitle
	{mso-style-link:"Subtítulo Char";
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:8.0pt;
	margin-left:35.7pt;
	text-indent:-17.85pt;
	line-height:107%;
	font-size:14.0pt;
	font-family:"Aptos",sans-serif;
	color:#595959;
	letter-spacing:.75pt;}
a:link, span.MsoHyperlink
	{color:#467886;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{color:#96607D;
	text-decoration:underline;}
pre
	{mso-style-link:"Pré-formatação HTML Char";
	margin:0cm;
	margin-bottom:.0001pt;
	font-size:10.0pt;
	font-family:"Courier New";}
p.MsoNoSpacing, li.MsoNoSpacing, div.MsoNoSpacing
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:2.0cm;
	font-size:11.0pt;
	font-family:"Aptos",sans-serif;}
p.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:35.4pt;
	line-height:107%;
	font-size:9.0pt;
	font-family:"Aptos",sans-serif;}
p.MsoListParagraphCxSpFirst, li.MsoListParagraphCxSpFirst, div.MsoListParagraphCxSpFirst
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:35.4pt;
	line-height:107%;
	font-size:9.0pt;
	font-family:"Aptos",sans-serif;}
p.MsoListParagraphCxSpMiddle, li.MsoListParagraphCxSpMiddle, div.MsoListParagraphCxSpMiddle
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:35.4pt;
	line-height:107%;
	font-size:9.0pt;
	font-family:"Aptos",sans-serif;}
p.MsoListParagraphCxSpLast, li.MsoListParagraphCxSpLast, div.MsoListParagraphCxSpLast
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:35.4pt;
	line-height:107%;
	font-size:9.0pt;
	font-family:"Aptos",sans-serif;}
p.MsoQuote, li.MsoQuote, div.MsoQuote
	{mso-style-link:"Citação Char";
	margin-top:8.0pt;
	margin-right:0cm;
	margin-bottom:8.0pt;
	margin-left:11.35pt;
	text-align:center;
	line-height:107%;
	font-size:11.0pt;
	font-family:"Aptos",sans-serif;
	color:#404040;
	font-style:italic;}
p.MsoIntenseQuote, li.MsoIntenseQuote, div.MsoIntenseQuote
	{mso-style-link:"Citação Intensa Char";
	margin-top:18.0pt;
	margin-right:43.2pt;
	margin-bottom:18.0pt;
	margin-left:43.2pt;
	text-align:center;
	line-height:107%;
	border:none;
	padding:0cm;
	font-size:11.0pt;
	font-family:"Aptos",sans-serif;
	color:#0F4761;
	font-style:italic;}
span.MsoIntenseEmphasis
	{color:#0F4761;
	font-style:italic;}
span.MsoIntenseReference
	{font-variant:small-caps;
	color:#0F4761;
	letter-spacing:.25pt;
	font-weight:bold;}
p.MsoTocHeading, li.MsoTocHeading, div.MsoTocHeading
	{margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	line-height:107%;
	page-break-after:avoid;
	font-size:16.0pt;
	font-family:"Aptos Display",sans-serif;
	color:#0F4761;}
span.Ttulo2Char
	{mso-style-name:"Título 2 Char";
	mso-style-link:"Título 2";
	font-family:"Aptos Display",sans-serif;
	color:#501549;}
span.Ttulo1Char
	{mso-style-name:"Título 1 Char";
	mso-style-link:"Título 1";
	font-family:"Aptos Display",sans-serif;
	color:#501549;}
span.Ttulo4Char
	{mso-style-name:"Título 4 Char";
	mso-style-link:"Título 4";
	font-family:"Times New Roman",serif;
	color:#0F4761;}
span.Ttulo3Char
	{mso-style-name:"Título 3 Char";
	mso-style-link:"Título 3";
	font-family:"Times New Roman",serif;
	color:#0F4761;}
span.Ttulo5Char
	{mso-style-name:"Título 5 Char";
	mso-style-link:"Título 5";
	font-family:"Times New Roman",serif;
	color:#0F4761;}
span.Ttulo6Char
	{mso-style-name:"Título 6 Char";
	mso-style-link:"Título 6";
	font-family:"Times New Roman",serif;
	color:#595959;
	font-style:italic;}
span.Ttulo7Char
	{mso-style-name:"Título 7 Char";
	mso-style-link:"Título 7";
	font-family:"Times New Roman",serif;
	color:#595959;}
span.Ttulo8Char
	{mso-style-name:"Título 8 Char";
	mso-style-link:"Título 8";
	font-family:"Times New Roman",serif;
	color:#272727;
	font-style:italic;}
span.Ttulo9Char
	{mso-style-name:"Título 9 Char";
	mso-style-link:"Título 9";
	font-family:"Times New Roman",serif;
	color:#272727;}
span.TtuloChar
	{mso-style-name:"Título Char";
	mso-style-link:Título;
	font-family:"Aptos Display",sans-serif;
	color:#002060;
	letter-spacing:-.5pt;}
span.SubttuloChar
	{mso-style-name:"Subtítulo Char";
	mso-style-link:Subtítulo;
	font-family:"Times New Roman",serif;
	color:#595959;
	letter-spacing:.75pt;}
span.CitaoChar
	{mso-style-name:"Citação Char";
	mso-style-link:Citação;
	color:#404040;
	font-style:italic;}
span.CitaoIntensaChar
	{mso-style-name:"Citação Intensa Char";
	mso-style-link:"Citação Intensa";
	color:#0F4761;
	font-style:italic;}
span.Pr-formataoHTMLChar
	{mso-style-name:"Pré-formatação HTML Char";
	mso-style-link:"Pré-formatação HTML";
	font-family:"Courier New";}
p.Estilo1, li.Estilo1, div.Estilo1
	{mso-style-name:Estilo1;
	margin-top:0cm;
	margin-right:-2.85pt;
	margin-bottom:0cm;
	margin-left:35.4pt;
	line-height:107%;
	font-size:10.0pt;
	font-family:"Aptos Display",sans-serif;}
span.CabealhoChar
	{mso-style-name:"Cabeçalho Char";
	mso-style-link:Cabeçalho;}
span.RodapChar
	{mso-style-name:"Rodapé Char";
	mso-style-link:Rodapé;}
p.Normal1, li.Normal1, div.Normal1
	{mso-style-name:Normal1;
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:2.0cm;
	line-height:107%;
	font-size:11.0pt;
	font-family:"Aptos",sans-serif;}
.MsoChpDefault
	{font-family:"Aptos",sans-serif;}
.MsoPapDefault
	{margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:35.7pt;
	margin-bottom:.0001pt;
	text-indent:-17.85pt;
	line-height:107%;}
@page WordSection1
	{size:595.3pt 841.9pt;
	margin:70.85pt 3.0cm 70.85pt 3.0cm;}
div.WordSection1
	{page:WordSection1;}
 /* List Definitions */
 ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>

</head>

<body lang=PT-BR link="#467886" vlink="#96607D" style='word-wrap:break-word'>

<div class=WordSection1>

<p class=MsoTocHeading>Sumário</p>

<p class=MsoToc1><a href="#_Toc157071979">1.0<span style='font-size:12.0pt;
line-height:107%;color:windowtext;text-decoration:none'>         </span>Título
do Projeto: Arquitetura Multi-Tenant SaaS na AWS com Terraform, AWS CodeCommit,
Git e .gitignore para Segurança das Configurações.<span style='color:windowtext;
display:none;text-decoration:none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>1</span></a></p>

<p class=MsoToc1><a href="#_Toc157071980">2.0<span style='font-size:12.0pt;
line-height:107%;color:windowtext;text-decoration:none'>         </span>Arquitetura
da solução:<span style='color:windowtext;display:none;text-decoration:none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>1</span></a></p>

<p class=MsoToc1><a href="#_Toc157071981">3.0<span style='font-size:12.0pt;
line-height:107%;color:windowtext;text-decoration:none'>         </span>Descrição
do cenário do projeto:<span style='color:windowtext;display:none;text-decoration:
none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>1</span></a></p>

<p class=MsoToc1><a href="#_Toc157071982">4.0<span style='font-size:12.0pt;
line-height:107%;color:windowtext;text-decoration:none'>         </span>Implementação<span
style='color:windowtext;display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>2</span></a></p>

<p class=MsoToc2><a href="#_Toc157071983">4.1 Criar os módulos responsáveis
pela geração dos recursos para os Estados dos Estados Unidos , reutilizando
código.<span style='color:windowtext;display:none;text-decoration:none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>2</span></a></p>

<p class=MsoToc2><a href="#_Toc157071984">4.2 Criaçao do bucket S3  via AWS CLI
para armazenamento do terraform .tfstate de forma remota para aumento da
segurança.<span style='color:windowtext;display:none;text-decoration:none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>33</span></a></p>

<p class=MsoToc2><a href="#_Toc157071985">4.3 Criação  da tabela DynamoDB via
AWS CLI  para controle do Lock para evitar modificação simultânea de forma
remota para aumento da segurança.<span style='color:windowtext;display:none;
text-decoration:none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>36</span></a></p>

<p class=MsoToc2><a href="#_Toc157071986">4.4 Salvamento dos arquivos de
configuração *.tf num repositório remoto do Code Commit   por segurança.<span
style='color:windowtext;display:none;text-decoration:none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>51</span></a></p>

<p class=MsoToc2><a href="#_Toc157071987">4.5<span style='font-size:12.0pt;
line-height:107%;color:windowtext;text-decoration:none'>          </span>Geração
de evidências do projeto :<span style='color:windowtext;display:none;
text-decoration:none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>60</span></a></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNoSpacing style='margin-left:11.35pt'><img width=567 height=567
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image002.jpg"
alt="Vamos re-começar pelo titulo do projeto: Arquitetura Multi-Tenant SaaS na AWS com Terraform, AWS CodeCommit, Git e .gitignore para Segurança das Configurações.    Quesitos:    - Fodelidade aos  nomes técnicos: Arquitetura Multi-Tenant SaaS na AWS com Terraform (IaaC : Infrastructure as a Code) , AWS CodeCommit, Git e .gitignore isto é deev ser escrito como estou dizendo e não modificando os nomes; inclusive colocando os símbolos destas tecnologias para impactar a comunidade t"></p>

<h1><a name="_Toc157071979">1.0<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span>Título do Projeto: Arquitetura Multi-Tenant SaaS na AWS com Terraform,
AWS CodeCommit, Git e .gitignore para Segurança das Configurações.</a></h1>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<h1><a name="_Toc157071980">2.0<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span>Arquitetura da solução:</a></h1>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><img width=567 height=285
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image003.jpg"
alt="Interface gráfica do usuário&#10;&#10;Descrição gerada automaticamente"></p>

<p class=MsoNormal>&nbsp;</p>

<h1><a name="_Toc157071981">3.0<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span>Descrição do cenário do projeto:</a></h1>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Cenário do Projeto:</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Imagine-se diante do desafio empolgante de construir uma
estrutura na AWS que seja flexível, escalável e segura, capaz de acomodar
vários usuários utilizando os aplicativos SaaS da HumanGov. Neste projeto,
iremos utilizar módulos do Terraform e garantir a segurança dos arquivos de
configuração por meio do AWS CodeCommit.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Objetivos do Projeto:</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>O principal objetivo é fornecer uma infraestrutura sólida e
eficiente para a implantação dos aplicativos SaaS da HumanGov na AWS.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Descrição do Projeto:</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Vamos desenhar e implementar uma infraestrutura SaaS
reutilizável, seguindo o conceito de Multi-Tenant. Isso significa que vários
usuários podem compartilhar a mesma estrutura de maneira segura. Utilizaremos
módulos do Terraform para isso. A infraestrutura será baseada em serviços AWS,
incluindo instâncias EC2, banco de dados DynamoDB e buckets S3. Para garantir a
segurança dos arquivos de configuração do Terraform, armazenaremos esses
arquivos de maneira segura no AWS CodeCommit.</p>

<p class=Normal1>&nbsp;</p>

<p class=MsoNormal>Passos Principais de Implementação:</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Conectar-se ao novo repositório AWS CodeCommit
(&quot;humangov-infrastructure&quot;) para armazenar com segurança os arquivos
de configuração do Terraform.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Criar módulos no Terraform que configuram recursos da AWS,
como instâncias EC2, bancos de dados RDS e buckets S3, para o aplicativo
HumanGov.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Implementar funções e políticas do AWS IAM para garantir
acesso seguro aos recursos implantados.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Configurar o backend do Terraform para usar um bucket S3 e
armazenar os arquivos de estado do Terraform.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Implantar a infraestrutura usando Terraform e testar a
configuração para garantir seu funcionamento conforme esperado.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Documentar o processo e fornecer instruções sobre como
reutilizar e personalizar os módulos no Terraform para diferentes usuários.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Resultado Esperado:</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Ao final do projeto, teremos uma infraestrutura SaaS na AWS,
seguindo o conceito de Multi-Tenant. Isso significa que vários usuários podem
compartilhar eficientemente a mesma estrutura de maneira segura. Essa conquista
será possível graças à eficiência dos módulos do Terraform e à segurança
proporcionada pelo AWS CodeCommit. Essa infraestrutura será um modelo para
futuras implantações, tornando o processo de implantação e gerenciamento das
aplicações SaaS da HumanGov na nuvem mais fácil e eficiente.</p>

<p class=MsoNormal>&nbsp;</p>

<h1><a name="_Toc157071982">4.0<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span>Implementação</a> </h1>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Vamos explicar como vai funcionara esta implementação. O
projeto vai estar dividido em 3 </p>

<p class=MsoNormal>&nbsp;</p>

<h2 style='margin-left:43.35pt;text-indent:0cm'><a name="_Toc157071983">4.1 Criar
os módulos responsáveis pela geração dos recursos para os Estados dos Estados
Unidos , reutilizando código.</a></h2>

<p class=MsoNormal>&nbsp;</p>

<p class=Normal1>Criar os módulos responsáveis por criar os recursos dentro dos
estados, reutilizando código. Para isso, será necessário utilizar uma estrutura
de repetição a fim de reutilizar este código de maneira consistente. Na
prática, haverá novos elementos a serem implementados em nossos arquivos de
configuração. Teremos que armazenar tanto as aplicações quanto os dados. As
aplicações serão executadas nas instâncias EC2, e, posteriormente, instalaremos
uma solução de servidor web para executar essas aplicações. Já os dados dos
usuários serão armazenados em uma tabela no Amazon DynamoDB, que guardará
informações sobre usuários, novos funcionários e colaboradores, registrando
seus dados em uma tabela específica do DynamoDB.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Ao recrutar novas pessoas para a empresa, será necessário
armazenar os arquivos contendo informações como carteira de habilitação, CPF,
RG, entre outros. Esses documentos podem ser guardados em um bucket S3 da AWS,
destinado a objetos dessa natureza. Os módulos devem ser capazes de criar esses
tipos de recursos sem a necessidade de duplicação de códigos.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Vamos para a parte 1 que é a criação dos módulos </p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Antes de avançarmos o que nós iremos necessitar é a criação de
um par de chaves ssh que nós vamos utilizar durante o hands-on, caso nos
necessitemos acessar uma destas máquinas nos já teremos uma chave criada para
propósitos futuros . Vamos na EC2 , criar uma chave do tipo pem </p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=Normal1><img width=567 height=248
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image004.jpg"
alt="Tela de computador com texto preto sobre fundo branco&#10;&#10;Descrição gerada automaticamente"></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=Normal1>Obs: Nós aprendemos também utilizando o keygen.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img width=566 height=251
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image005.jpg"
alt="Interface gráfica do usuário, Aplicativo&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Obs: Armazenar esta chave na sua máquina para usá-la quando
for necessário. A chave pública já está disponível na AWS  e portanto não terei
problema nenhum no meu código.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Agora vamos para o Cloud9 (ambiente humangov). Agora é hora de
começar nosso projeto final. Vamos criar um terminal:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img width=567 height=318
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image006.jpg"
alt="Tela de computador com texto preto sobre fundo branco&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Em relação a salvar os arquivos , nós temos o autosave. Clicar
em configurações :</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img width=566 height=317
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image007.jpg"
alt="Interface gráfica do usuário, Texto&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img width=567 height=325
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image008.jpg"
alt="Interface gráfica do usuário, Aplicativo&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img width=567 height=318
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image009.jpg"
alt="Uma imagem contendo Aplicativo&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img width=566 height=262
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image010.jpg"
alt="Tela de computador&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Lembrando que nós temos as 2 pastas que nós criamos que foram
human-gov-aplication e human-gov-infrastructure lembrando que estes aqui
são repositorios git .</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img width=567 height=307
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image011.jpg"
alt="Texto&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Se formos  no Code Commit  na console temos: </p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img width=567 height=288
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image012.jpg"
alt="Interface gráfica do usuário, Texto, Aplicativo, Email&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Obs: Nos trabalharemos agora em cima do
human-gov-infrastructure (arquivo de configuração da infraestrutura) . Vamos
acessar a pasta do human-gov-infrastructure :</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img width=567 height=264
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image013.jpg"
alt="Texto&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>E dentro desta criaremos o diretório root com o nome de
terraform . Sera nosso configurator directory :</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img width=566 height=279
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image014.jpg"
alt="Tela de computador com texto preto sobre fundo branco&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Vou acessar o diretório root do terraform :</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img width=567 height=273
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image015.jpg"
alt="Interface gráfica do usuário&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Nós vamos precisar criar os módulos , criar a estrutura de
módulos que nos já conhecemos . Precisamos também criar uma estrutura de
diretórios para esta finalidade:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img width=566 height=266
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image016.jpg"
alt="Texto&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Vamos criar o arquivo main.tf, variables.tf, outputs. tf  </p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img width=567 height=260
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image017.jpg"
alt="Texto&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img width=567 height=248
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image018.jpg"
alt="Texto&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Vamos editar os arquivos dos módulos e depois trataremos dos
arquivos da pasta raiz :</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Vamos começar pelo módulo variável (variables.tf) que vai
determinar a execução do módulo :</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img width=567 height=258
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image019.jpg"
alt="Tela de computador&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>A compreensão da seção de variáveis pode ser desafiadora.
Estamos prestes a criar uma variável chamada 'state_name', na qual informaremos
o nome do estado para o qual desejamos que o módulo crie os recursos. Portanto,
ao mencionarmos 'Flórida', o módulo criará recursos para a Flórida; ao
mencionarmos 'Texas', ele os criará para o Texas. Observe que não estamos
atribuindo um valor padrão aqui. Este valor será inserido na parte raiz (root),
no arquivo principal da pasta raiz, que controlaremos, e não nesta seção. A
ausência de um valor padrão ocorre devido à sua natureza dinâmica, uma vez que
estará sujeito a alterações. O módulo simplesmente o reutilizará. Não
realizamos mais alterações diretamente no módulo. Após a criação, ajustamos
apenas na manipulação ao chamar o módulo a partir da raiz. O arquivo
'variables.tf' contém o necessário para nossas demandas.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Agora, avançaremos para nosso arquivo 'main.tf', que é onde
criaremos todos os recursos:</p>

<p class=Normal1><img width=567 height=250
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image020.jpg"
alt="Tela de computador&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1><img width=567 height=236
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image021.jpg"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Este arquivo main.tf que vai criar todos os recursos que são :</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1># Configurando um Grupo de Segurança para permitir tráfego em
instâncias EC2</p>

<p class=Normal1><span lang=EN-US>resource &quot;aws_security_group&quot;
&quot;state_ec2_sg&quot; {</span></p>

<p class=Normal1><span lang=EN-US>  </span># Nome do Grupo de Segurança</p>

<p class=Normal1>  name        = &quot;humangov-${var.state_name}-ec2-sg&quot;</p>

<p class=Normal1>  </p>

<p class=Normal1>  # Descrição do Grupo de Segurança</p>

<p class=Normal1>  description = &quot;Este grupo de segurança permite tráfego
nas portas 22 e 80 para instâncias EC2.&quot;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>  # Regras de entrada para permitir tráfego SSH (porta 22) e
HTTP (porta 80)</p>

<p class=Normal1>  <span lang=EN-US>ingress {</span></p>

<p class=Normal1><span lang=EN-US>    from_port   = 22</span></p>

<p class=Normal1><span lang=EN-US>    to_port     = 22</span></p>

<p class=Normal1><span lang=EN-US>    protocol    = &quot;tcp&quot;</span></p>

<p class=Normal1><span lang=EN-US>    cidr_blocks = [&quot;0.0.0.0/0&quot;]</span></p>

<p class=Normal1><span lang=EN-US>  }</span></p>

<p class=Normal1><span lang=EN-US>&nbsp;</span></p>

<p class=Normal1><span lang=EN-US>  ingress {</span></p>

<p class=Normal1><span lang=EN-US>    from_port   = 80</span></p>

<p class=Normal1><span lang=EN-US>    to_port     = 80</span></p>

<p class=Normal1><span lang=EN-US>    </span>protocol    = &quot;tcp&quot;</p>

<p class=Normal1>    cidr_blocks = [&quot;0.0.0.0/0&quot;]</p>

<p class=Normal1>  }</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>  # Tags para identificação do Grupo de Segurança</p>

<p class=Normal1>  <span lang=EN-US>tags = {</span></p>

<p class=Normal1><span lang=EN-US>    Name =
&quot;humangov-${var.state_name}&quot;</span></p>

<p class=Normal1><span lang=EN-US>  </span>}</p>

<p class=Normal1>}</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1># Configurando uma Máquina Virtual (Instância EC2)</p>

<p class=Normal1><span lang=EN-US>resource &quot;aws_instance&quot;
&quot;state_ec2&quot; {</span></p>

<p class=Normal1><span lang=EN-US>  </span># AMI (Amazon Machine Image) que
define o sistema operacional da instância</p>

<p class=Normal1>  ami           = &quot;ami-007855ac798b5175e&quot;</p>

<p class=Normal1>  </p>

<p class=Normal1>  # Tipo da instância (tamanho)</p>

<p class=Normal1>  instance_type = &quot;t2.micro&quot;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>  # Nome da chave SSH para acessar a instância</p>

<p class=Normal1>  <span lang=EN-US>key_name      =
&quot;humangov-ec2-key&quot;</span></p>

<p class=Normal1><span lang=EN-US>&nbsp;</span></p>

<p class=Normal1><span lang=EN-US>  </span># Referência ao Grupo de Segurança
criado anteriormente</p>

<p class=Normal1>  <span lang=EN-US>vpc_security_group_ids =
[aws_security_group.state_ec2_sg.id]</span></p>

<p class=Normal1><span lang=EN-US>&nbsp;</span></p>

<p class=Normal1><span lang=EN-US>  </span># Tags para identificação da
Instância EC2</p>

<p class=Normal1>  <span lang=EN-US>tags = {</span></p>

<p class=Normal1><span lang=EN-US>    Name =
&quot;humangov-${var.state_name}&quot;</span></p>

<p class=Normal1><span lang=EN-US>  </span>}</p>

<p class=Normal1>}</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1># Configurando uma Tabela NoSQL (DynamoDB)</p>

<p class=Normal1><span lang=EN-US>resource &quot;aws_dynamodb_table&quot;
&quot;state_dynamodb&quot; {</span></p>

<p class=Normal1><span lang=EN-US>  </span># Nome da Tabela DynamoDB</p>

<p class=Normal1>  name         =
&quot;humangov-${var.state_name}-dynamodb&quot;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>  # Modo de faturamento por requisição</p>

<p class=Normal1>  billing_mode = &quot;PAY_PER_REQUEST&quot; (por padrão vem
com outro  vai ser por requisição)</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>  # Chave primária da tabela (hash_key é como se fosse uma
primary key . Para quem já  trabalhou com banco de dados e entende você precisa
determinar qual é coluna que  é chave primaria e a questão da hash vai dar a unicidade.
Temos que saber qual é o  registro único da tabela:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>  hash_key     = &quot;id&quot;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Obs: Identificador Único (ID):</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>O termo &quot;id&quot; refere-se geralmente a um identificador
único associado a um item na tabela. Cada item terá um valor único para esse
atributo &quot;id&quot;.</p>

<p class=Normal1>Ao inserir itens na tabela, é importante garantir que os
valores do atributo &quot;id&quot; sejam exclusivos para evitar conflitos.</p>

<p class=Normal1>Resumindo, ao configurar hash_key = &quot;id&quot;, você está
definindo que o atributo &quot;id&quot; na tabela DynamoDB será usado como
chave de partição, garantindo que cada item na tabela tenha um identificador
único para permitir recuperação eficiente dos dados associados a esse
identificador.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>  # Atributo da tabela</p>

<p class=Normal1>  attribute {</p>

<p class=Normal1>    name = &quot;id&quot;</p>

<p class=Normal1>    type = &quot;S&quot;</p>

<p class=Normal1>  }</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>  # Tags para identificação da Tabela DynamoDB</p>

<p class=Normal1>  <span lang=EN-US>tags = {</span></p>

<p class=Normal1><span lang=EN-US>    Name =
&quot;humangov-${var.state_name}&quot;</span></p>

<p class=Normal1><span lang=EN-US>  }</span></p>

<p class=Normal1><span lang=EN-US>}</span></p>

<p class=Normal1><span lang=EN-US>&nbsp;</span></p>

<p class=Normal1><span lang=EN-US># Criando uma String Aleatória</span></p>

<p class=Normal1><span lang=EN-US>resource &quot;random_string&quot; &quot;bucket_suffix&quot;
{</span></p>

<p class=Normal1><span lang=EN-US>  </span># Comprimento da string aleatória</p>

<p class=Normal1>  length  = 4</p>

<p class=Normal1>  </p>

<p class=Normal1>  # Apenas caracteres alfanuméricos (sem caracteres especiais
ou maiúsculas)</p>

<p class=Normal1>  special = false</p>

<p class=Normal1>  upper   = false</p>

<p class=Normal1>}</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1># Configurando um Armazenamento de Objetos (Bucket S3)</p>

<p class=Normal1><span lang=EN-US>resource &quot;aws_s3_bucket&quot;
&quot;state_s3&quot; {</span></p>

<p class=Normal1><span lang=EN-US>  </span># Nome do Bucket S3 incluindo a
string aleatória gerada</p>

<p class=Normal1>  <span lang=EN-US>bucket =
&quot;humangov-${var.state_name}-s3-${random_string.bucket_suffix.result}&quot;</span></p>

<p class=Normal1><span lang=EN-US>  </span></p>

<p class=Normal1><span lang=EN-US>  </span># Controle de acesso ao Bucket</p>

<p class=Normal1>  acl    = &quot;private&quot;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>  # Tags para identificação do Bucket S3</p>

<p class=Normal1>  <span lang=EN-US>tags = {</span></p>

<p class=Normal1><span lang=EN-US>    Name =
&quot;humangov-${var.state_name}&quot;</span></p>

<p class=Normal1><span lang=EN-US>  </span>}</p>

<p class=Normal1>}</p>

<p class=Normal1>Explicações Detalhadas para Leigos:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Grupo de Segurança para instâncias EC2:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Nome do Grupo de Segurança: O nome é formado pela palavra
&quot;humangov-&quot;, seguida pelo nome do estado (var.state_name), e
finalizada com &quot;-ec2-sg&quot;. Esse nome ajuda a identificar o propósito
do grupo.</p>

<p class=Normal1>Descrição do Grupo de Segurança: Uma breve explicação de que
este grupo permite tráfego nas portas 22 e 80 para instâncias EC2.</p>

<p class=Normal1>Regras de Entrada: Duas regras são configuradas para permitir
tráfego nas portas 22 (SSH) e 80 (HTTP) de qualquer lugar.</p>

<p class=Normal1>Tags: São etiquetas que ajudam a identificar o recurso, e a
tag &quot;Name&quot; é definida como &quot;humangov-${var.state_name}&quot;.</p>

<p class=Normal1>Máquina Virtual (Instância EC2):</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>AMI: É a imagem que define o sistema operacional da instância,
e aqui é especificada uma imagem específica.</p>

<p class=Normal1>Tipo da Instância: Indica o tamanho da instância, sendo uma
instância pequena (t2.micro).</p>

<p class=Normal1>Chave SSH: Especifica a chave de autenticação para acessar a
instância, chamada &quot;humangov-ec2-key&quot;.</p>

<p class=Normal1>Grupo de Segurança: Faz referência ao Grupo de Segurança
criado anteriormente para controlar o tráfego.</p>

<p class=Normal1>Tags: São etiquetas para identificar a instância, e a tag
&quot;Name&quot; é definida como &quot;humangov-${var.state_name}&quot;.</p>

<p class=Normal1>Tabela NoSQL (DynamoDB):</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Nome da Tabela: É formado pela palavra &quot;humangov-&quot;,
seguida pelo nome do estado (var.state_name), e finalizado com
&quot;-dynamodb&quot;. Esse nome é único e ajuda a identificar a tabela.</p>

<p class=Normal1>Modo de Faturamento: Configurado como
&quot;PAY_PER_REQUEST&quot;, o que significa que você paga apenas pelas
operações realizadas.</p>

<p class=Normal1>Chave Primária: Especifica a chave primária da tabela, que
neste caso é &quot;id&quot;.</p>

<p class=Normal1>Atributo da Tabela: Define um atributo chamado &quot;id&quot;
do tipo string.</p>

<p class=Normal1>Tags: São etiquetas para identificar a tabela, e a tag
&quot;Name&quot; é definida como &quot;humangov-${var.state_name}&quot;.</p>

<p class=Normal1>String Aleatória:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Comprimento da String Aleatória: Define o comprimento da
string, sendo 4 caracteres.</p>

<p class=Normal1>Caracteres Especiais e Maiúsculas: Configurados como false, ou
seja, a string aleatória terá apenas caracteres alfanuméricos.</p>

<p class=Normal1>Armazenamento de Objetos (Bucket S3):</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Nome do Bucket S3: É formado pela palavra
&quot;humangov-&quot;, seguida pelo nome do estado (var.state_name), um
&quot;-s3-&quot;, e finalizado com a string aleatória gerada anteriormente.
Esse nome único identifica o bucket.</p>

<p class=Normal1>Controle de Acesso ao Bucket: Configurado como
&quot;private&quot; para garantir acesso restrito.</p>

<p class=Normal1>Tags: São etiquetas para identificar o bucket, e a tag
&quot;Name&quot; é definida como &quot;humangov-${var.state_name}&quot;.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Agora vamos para o output.tf:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img width=567 height=250
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image022.jpg"
alt="Interface gráfica do usuário&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1># Saída para obter o DNS público da instância EC2</p>

<p class=Normal1><span lang=EN-US>output &quot;state_ec2_public_dns&quot; {</span></p>

<p class=Normal1><span lang=EN-US>  value = aws_instance.state_ec2.public_dns</span></p>

<p class=Normal1>}</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1># Saída para obter o nome da tabela DynamoDB</p>

<p class=Normal1><span lang=EN-US>output &quot;state_dynamodb_table&quot; {</span></p>

<p class=Normal1><span lang=EN-US>  value =
aws_dynamodb_table.state_dynamodb.name</span></p>

<p class=Normal1>}</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1># Saída para obter o nome do Bucket S3</p>

<p class=Normal1><span lang=EN-US>output &quot;state_s3_bucket&quot; {</span></p>

<p class=Normal1><span lang=EN-US>  value = aws_s3_bucket.state_s3.bucket</span></p>

<p class=Normal1>}</p>

<p class=Normal1>Explicações Detalhadas :</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Saída para obter o DNS público da instância EC2:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Objetivo: Esta parte do código está criando uma
&quot;saída&quot; chamada &quot;state_ec2_public_dns&quot; para obter o DNS
público de uma instância EC2 específica.</p>

<p class=Normal1>O que é o DNS público da instância EC2: O DNS público é um
endereço legível e único associado à instância EC2 na internet. Ele permite que
você acesse serviços ou aplicativos hospedados na instância usando um nome
amigável em vez de um endereço IP. Essa saída é útil para saber como acessar a
instância pela web.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Saída para obter o nome da tabela DynamoDB:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Objetivo: Esta parte do código está criando uma
&quot;saída&quot; chamada &quot;state_dynamodb_table&quot; para obter o nome da
tabela DynamoDB.</p>

<p class=Normal1>O que é o nome da tabela DynamoDB: O nome da tabela é um
identificador único para a tabela no serviço de banco de dados NoSQL DynamoDB.
Essa saída nos permite saber como referenciar e interagir com a tabela no
futuro.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Saída para obter o nome do Bucket S3:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Objetivo: Esta parte do código está criando uma
&quot;saída&quot; chamada &quot;state_s3_bucket&quot; para obter o nome do
Bucket S3.</p>

<p class=Normal1>O que é o nome do Bucket S3: O nome do Bucket S3 é um
identificador único para o armazenamento de objetos na Amazon S3. Essa saída
nos fornece o nome do Bucket, que é necessário para armazenar e recuperar dados
no S3.</p>

<p class=Normal1>Importância Prática:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>DNS Público da Instância EC2: Permite acessar serviços ou
aplicativos hospedados na instância pela web usando um nome fácil de lembrar,
em vez de um endereço IP complicado.</p>

<p class=Normal1>Nome da Tabela DynamoDB: Facilita referenciar e realizar
operações em dados armazenados na tabela DynamoDB.</p>

<p class=Normal1>Nome do Bucket S3: Necessário para armazenar, recuperar e
gerenciar objetos no serviço de armazenamento S3 da Amazon.</p>

<p class=Normal1>Essas saídas são como &quot;rótulos&quot; que nos ajudam a
acessar informações específicas sobre os recursos que criamos com o Terraform.
Elas são valiosas para interagir com esses recursos de maneira eficiente e
organizada.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>O que foi feito até aqui diz respeito aos arquivos do módulo.
Agora, vamos criar os arquivos em nosso diretório raiz, que está localizado
abaixo da pasta 'terraform'. Preste muita atenção para não criar arquivos no
local errado.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Clique com o botão direito do mouse sobre a pasta 'Terraform'
e selecione 'New File':</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img width=568 height=278
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image023.jpg"
alt="Tela de computador com texto preto sobre fundo branco&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>E vamos começar pelas variables.tf</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img width=566 height=267
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image024.jpg"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Não confundir os arquivos que fazem parte do módulo e os
arquivos que fazem parte do root que é onde o módulo era chamado:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img width=567 height=285
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image025.jpg"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Atente que até o momento eu não alimentei a variável
state_name que está no arquivo de variável de módulo .<img width=567
height=255
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image026.jpg"
alt="Interface gráfica do usuário, Site&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Mas isso vai aparecer em breve. Estou a caminho. Agora, vamos
criar o <b>main.tf</b> e invocar o módulo. Basta clicar na pasta 'terraform',
usar o botão direito e selecionar 'New File'</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img width=567 height=256
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image027.jpg"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img width=567 height=258
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image028.jpg"
alt="Tela de computador&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Explicando melhor: </p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Análise para o arquivo main.tf </p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><span lang=EN-US>&quot;provider &quot;aws&quot; {</span></p>

<p class=Normal1><span lang=EN-US>  region = &quot;us-east-1&quot;</span></p>

<p class=Normal1><span lang=EN-US>}</span></p>

<p class=Normal1><span lang=EN-US>&nbsp;</span></p>

<p class=Normal1><span lang=EN-US>module
&quot;aws_humangov_infrastructure&quot; {</span></p>

<p class=Normal1><span lang=EN-US>  source     =
&quot;./modules/aws_humangov_infrastructure&quot;</span></p>

<p class=Normal1><span lang=EN-US>  for_each   = toset(var.states)</span></p>

<p class=Normal1><span lang=EN-US>  state_name = each.value&quot;</span></p>

<p class=Normal1><span lang=EN-US>&nbsp;</span></p>

<p class=Normal1><span lang=EN-US>&nbsp;</span></p>

<p class=Normal1><span lang=EN-US>&nbsp;</span></p>

<p class=Normal1><span lang=EN-US>e com base no arquivo variables.tf</span></p>

<p class=Normal1><span lang=EN-US>&nbsp;</span></p>

<p class=Normal1><span lang=EN-US>variable &quot;states&quot; {</span></p>

<p class=Normal1><span lang=EN-US>  description = &quot;A list of state
names&quot;</span></p>

<p class=Normal1><span lang=EN-US>  </span>default = [&quot;california&quot;]</p>

<p class=Normal1>}</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Como sera feito este processamento ?</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><span lang=EN-US>No arquivo variables.tf:</span></p>

<p class=Normal1><span lang=EN-US>&nbsp;</span></p>

<p class=Normal1><span lang=EN-US>variable &quot;states&quot;:</span></p>

<p class=Normal1>O que é isso: Este é um espaço reservado para armazenar uma
lista de nomes de estados.</p>

<p class=Normal1>Por que é importante: Ele permite flexibilidade, podendo ser
facilmente ajustado para lidar com diferentes estados.</p>

<p class=Normal1>No arquivo main.tf:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>2. provider &quot;aws&quot;:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>O que é isso: Estabelece a conexão com os serviços da Amazon
Web Services (AWS).</p>

<p class=Normal1>Por que é importante: Isso indica à ferramenta Terraform em
qual região da AWS deve criar os recursos (por exemplo, servidores, bancos de
dados).</p>

<p class=Normal1>module &quot;aws_humangov_infrastructure&quot;:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>O que é isso: Aqui, estamos usando um módulo chamado
&quot;aws_humangov_infrastructure&quot; para criar a infraestrutura AWS.</p>

<p class=Normal1>Por que é importante: Módulos são como blocos de construção
reutilizáveis que simplificam a criação e manutenção de recursos.</p>

<p class=Normal1><span lang=EN-US>source =
&quot;./modules/aws_humangov_infrastructure&quot;:</span></p>

<p class=Normal1><span lang=EN-US>&nbsp;</span></p>

<p class=Normal1>O que é isso: Indica de onde o Terraform deve obter o código
do módulo.</p>

<p class=Normal1>Por que é importante: Permite que você use código modular,
facilitando a organização e reutilização do código.</p>

<p class=Normal1><span lang=EN-US>for_each = toset(var.states):</span></p>

<p class=Normal1><span lang=EN-US>&nbsp;</span></p>

<p class=Normal1>O que é isso: Estamos iterando sobre cada estado na lista de
estados fornecida.</p>

<p class=Normal1>Por que é importante: Isso permite criar recursos específicos
para cada estado na lista.</p>

<p class=Normal1>state_name = each.value&quot;:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>O que é isso: Cada instância do módulo
&quot;aws_humangov_infrastructure&quot; terá um nome de estado atribuído.</p>

<p class=Normal1>Por que é importante: Isso personaliza a infraestrutura para
cada estado na lista, garantindo que os recursos sejam distintos para cada um.</p>

<p class=Normal1>Resumo para Leigos:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Objetivo Geral: Este código Terraform cria recursos AWS em
diferentes estados.</p>

<p class=Normal1>Flexibilidade: A lista de estados pode ser facilmente
ajustada.</p>

<p class=Normal1>Organização e Reutilização: O uso de módulos torna o código
mais organizado e reutilizável.</p>

<p class=Normal1>Personalização: Cada estado terá sua própria infraestrutura
distinta.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Agora vamos criar nosso último arquivo que é o outputs.tf: </p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img width=567 height=308
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image029.jpg"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img width=567 height=275
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image030.jpg"
alt="Tela de computador com jogo&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Vamos expandir a explicação, especialmente no que diz respeito
ao loop for e de onde vêm os valores infrastructure.state_ec2_public_dns,
infrastructure.state_dynamodb_table e infrastructure.state_s3_bucket.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>No diretório raiz do projeto (outputs.tf):</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1># Arquivo: outputs.tf no diretório raiz</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><span lang=EN-US>output
&quot;state_infrastructure_outputs&quot; {</span></p>

<p class=Normal1><span lang=EN-US>  value = {</span></p>

<p class=Normal1><span lang=EN-US>    for state, infrastructure in
module.aws_humangov_infrastructure :</span></p>

<p class=Normal1><span lang=EN-US>    state =&gt; {</span></p>

<p class=Normal1><span lang=EN-US>      ec2_public_dns   =
infrastructure.state_ec2_public_dns</span></p>

<p class=Normal1><span lang=EN-US>      dynamodb_table   = infrastructure.state_dynamodb_table</span></p>

<p class=Normal1><span lang=EN-US>      s3_bucket        =
infrastructure.state_s3_bucket</span></p>

<p class=Normal1><span lang=EN-US>    </span>}</p>

<p class=Normal1>  }</p>

<p class=Normal1>}</p>

<p class=Normal1>Explicação Detalhada:</p>

<p class=Normal1>Criação de Saída:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>output &quot;state_infrastructure_outputs&quot;: Este bloco de
código define uma saída chamada &quot;state_infrastructure_outputs&quot; no
diretório raiz do projeto.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Utilização de Loop for:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>for state, infrastructure in
module.aws_humangov_infrastructure: Utiliza um loop for para percorrer os
estados e infraestruturas fornecidos pelo módulo aws_humangov_infrastructure.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Criação de Mapeamento:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>state =&gt; { ... }: Cria um mapeamento para cada estado,
utilizando a notação state =&gt; { ... }. Este mapeamento associa cada estado a
um bloco de informações.</p>

<p class=Normal1>Inclusão de Informações:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>ec2_public_dns = infrastructure.state_ec2_public_dns: Adiciona
a informação do DNS público da instância EC2 (ec2_public_dns) ao mapeamento
para o estado específico.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>dynamodb_table = infrastructure.state_dynamodb_table: Adiciona
o nome da tabela DynamoDB (dynamodb_table) ao mapeamento para o estado
específico</p>

<p class=Normal1>.</p>

<p class=Normal1>s3_bucket = infrastructure.state_s3_bucket: Adiciona o nome do
bucket S3 (s3_bucket) ao mapeamento para o estado específico.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Entendendo o Loop for:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>for state, infrastructure in
module.aws_humangov_infrastructure: Esse loop percorre o módulo
aws_humangov_infrastructure, onde state representa cada estado e infrastructure
representa as informações associadas a esse estado.</p>

<p class=Normal1>Origem dos Valores:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>infrastructure.state_ec2_public_dns: Estes valores são
provenientes da infraestrutura do módulo aws_humangov_infrastructure. Para cada
estado, infrastructure contém as informações específicas, e
state_ec2_public_dns, state_dynamodb_table e state_s3_bucket são atributos ou
saídas dentro dessa infraestrutura.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Conclusão:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Esse conjunto de códigos cria uma saída consolidada,
fornecendo informações agrupadas sobre os diferentes estados e suas respectivas
infraestruturas. A estrutura final é um mapeamento onde cada chave é um estado,
e os valores são outros mapeamentos contendo informações específicas, como o
DNS público da instância EC2, o nome da tabela DynamoDB e o nome do bucket S3.</p>

<p class=Normal1>Esta estrutura de saída é útil para acessar facilmente
informações da infraestrutura criada pelo módulo, permitindo uma visão
organizada e reutilizável em outras partes do projeto Terraform.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Agora estamos prontos para fazer o nosso deploy. Temos que ir
para a pasta root (human-gov-infrastructure) e dentro da pasta Terraform:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img width=567 height=266
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image031.jpg"
alt="Tela de computador&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Certifique-se que você está dentro desta pasta para executar
os comandos </p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img width=567 height=263
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image032.jpg"
alt="Tela de computador&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Vamos executar o terraform fmt</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img width=567 height=257
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image033.jpg"
alt="Interface gráfica do usuário&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>O próximo é o terraform init </p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img width=567 height=272
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image034.jpg"
alt="Texto&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Para rodar  o validate nós temos  que rodar o init primeiro
porque o init vai inicializar o backend , vai inicializar os plugins do que nós
precisamos . Agora vamos rodar o Terraform validate:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img width=567 height=271
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image035.jpg"
alt="Tela de computador com texto preto sobre fundo branco&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>O aviso que nós estamos  recebendo indica que o argumento acl
no bloco resource &quot;aws_s3_bucket&quot; está obsoleto e que você deve usar
o recurso aws_s3_bucket_acl em vez disso.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Aqui está como você pode ajustar seu código para corrigir
isso:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1># No seu arquivo modules/aws_humangov_infrastructure/main.tf</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><span lang=EN-US>resource &quot;aws_s3_bucket_acl&quot;
&quot;state_s3_acl&quot; {</span></p>

<p class=Normal1><span lang=EN-US>  bucket = aws_s3_bucket.state_s3.bucket</span></p>

<p class=Normal1><span lang=EN-US>  acl    = &quot;private&quot;</span></p>

<p class=Normal1><span lang=EN-US>}</span></p>

<p class=Normal1><span lang=EN-US>&nbsp;</span></p>

<p class=Normal1><span lang=EN-US>resource &quot;aws_s3_bucket&quot;
&quot;state_s3&quot; {</span></p>

<p class=Normal1><span lang=EN-US>  bucket =
&quot;humangov-${var.state_name}-s3-${random_string.bucket_suffix.result}&quot;</span></p>

<p class=Normal1><span lang=EN-US>&nbsp;</span></p>

<p class=Normal1><span lang=EN-US>  </span># Remova a linha abaixo, já que o
acl é gerenciado pelo aws_s3_bucket_acl</p>

<p class=Normal1>  <span lang=EN-US># acl    = &quot;private&quot;</span></p>

<p class=Normal1><span lang=EN-US>&nbsp;</span></p>

<p class=Normal1><span lang=EN-US>  tags = {</span></p>

<p class=Normal1><span lang=EN-US>    Name =
&quot;humangov-${var.state_name}&quot;</span></p>

<p class=Normal1><span lang=EN-US>  </span>}</p>

<p class=Normal1>}</p>

<p class=Normal1>Essencialmente, você adiciona um novo bloco resource
&quot;aws_s3_bucket_acl&quot; para gerenciar as configurações de controle de
acesso (ACL) do bucket S3. Você então referência esse bloco no seu recurso
aws_s3_bucket usando bucket = aws_s3_bucket_acl.state_s3_acl.bucket.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Certifique-se de revisar a documentação mais recente do
Terraform e AWS para garantir que esteja utilizando as melhores práticas e as
versões mais recentes dos recursos. Depois de fazer essas alterações, você pode
executar novamente o terraform validate.</p>

<p class=Normal1>Fazendo o ajuste e rodando o terraform validate novamente
temos :</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img width=567 height=273
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image036.jpg"
alt="Texto&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Agora vamos rodar o terraform plan , quantos recursos serão
criados . Faça uma conta  : 6x3 = 18 (6 = 1 security group por estado ,
instância ec2 por estado, uma tabela dynamodb por estado, uma random_string pór
estado, bucket S3 por estado e recurso acl por estado)   x 3 estados até o
momento  = California, Florida e Texas) </p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img width=566 height=267
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image037.jpg"
alt="Tela de computador&#10;&#10;Descrição gerada automaticamente"> </p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Vamos agora executar o terraform apply e começar a criação
destes recursos .</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Antes disto vamos ver a parte da documentação  explicando o
for em <a
href="https://developer.hashicorp.com/terraform/language/expressions/for">https://developer.hashicorp.com/terraform/language/expressions/for</a></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Um pouquinho da teria sobre o &quot;for&quot; do link acima :</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>No Terraform, a expressão for é usada para criar estruturas de
dados com base em estruturas existentes. O tipo de colchetes que você utiliza
ao redor da expressão irá determinar o tipo de resultado que ela irá produzir.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Vamos explicar de forma simples:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Resultado de Tupla:</p>

<p class=Normal1>Se você usar colchetes quadrados [ ] ao redor da expressão
for, ela produz uma tupla. Em termos simples, uma tupla é uma coleção ordenada
de elementos. Aqui está um exemplo:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>resultado = [for s in var.lista : upper(s)]</p>

<p class=Normal1>Esta expressão cria uma tupla onde cada elemento é a versão em
maiúsculas do elemento correspondente em var.lista. Por exemplo, se var.lista
for [&quot;foo&quot;, &quot;bar&quot;, &quot;baz&quot;], o resultado seria
[&quot;FOO&quot;, &quot;BAR&quot;, &quot;BAZ&quot;].</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Resultado de Objeto:</p>

<p class=Normal1>Se você usar chaves { } ao redor da expressão for, ela produz
um objeto. Um objeto, em termos simples, é uma coleção de pares chave-valor.
Aqui está um exemplo:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>resultado = {for s in var.lista : s =&gt; upper(s)}</p>

<p class=Normal1>Esta expressão cria um objeto onde os elementos originais de
var.lista tornam-se chaves, e seus valores correspondentes são as versões em
maiúsculas. Por exemplo, se var.lista for [&quot;foo&quot;, &quot;bar&quot;,
&quot;baz&quot;], o resultado seria:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><span lang=EN-US>{</span></p>

<p class=Normal1><span lang=EN-US>  foo = &quot;FOO&quot;</span></p>

<p class=Normal1><span lang=EN-US>  bar = &quot;BAR&quot;</span></p>

<p class=Normal1><span lang=EN-US>  baz = &quot;BAZ&quot;</span></p>

<p class=Normal1>}</p>

<p class=Normal1>Conversão Automática de Tipo:</p>

<p class=Normal1>Uma expressão for por si só pode apenas produzir um objeto ou
uma tupla. No entanto, o Terraform possui regras automáticas de conversão de
tipo. Isso significa que você geralmente pode usar os resultados em locais onde
listas, mapas e conjuntos são esperados. Essa flexibilidade permite que você
trabalhe com diferentes estruturas de dados de maneira transparente.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Em resumo, as expressões for no Terraform proporcionam uma
maneira poderosa de transformar e estruturar dados, e a escolha de colchetes
determina se o resultado é uma tupla ou um objeto.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Nosso caso real :</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Falando do nosso caso real &quot;output
&quot;state_infrastructure_outputs&quot; {</p>

<p class=Normal1>  <span lang=EN-US>value = {</span></p>

<p class=Normal1><span lang=EN-US>    for state, infrastructure in
module.aws_humangov_infrastructure :</span></p>

<p class=Normal1><span lang=EN-US>    state =&gt; {</span></p>

<p class=Normal1><span lang=EN-US>      ec2_public_dns =
infrastructure.state_ec2_public_dns</span></p>

<p class=Normal1><span lang=EN-US>      dynamodb_table =
infrastructure.state_dynamodb_table</span></p>

<p class=Normal1><span lang=EN-US>      s3_bucket      =
infrastructure.state_s3_bucket</span></p>

<p class=Normal1><span lang=EN-US>    </span>}</p>

<p class=Normal1>  }&quot; com base nesta descrição </p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Explicação do Caso Real: Saída de Infraestrutura no Terraform</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>No nosso  caso real, nos estamos está usando uma expressão for
em uma saída (output) do Terraform para criar uma estrutura de dados que
reflete as informações da infraestrutura criada por um módulo chamado
aws_humangov_infrastructure. <span lang=EN-US>Vamos analisar em detalhes:</span></p>

<p class=Normal1><span lang=EN-US>&nbsp;</span></p>

<p class=Normal1><span lang=EN-US>output
&quot;state_infrastructure_outputs&quot; {</span></p>

<p class=Normal1><span lang=EN-US>  value = {</span></p>

<p class=Normal1><span lang=EN-US>    for state, infrastructure in
module.aws_humangov_infrastructure :</span></p>

<p class=Normal1><span lang=EN-US>    state =&gt; {</span></p>

<p class=Normal1><span lang=EN-US>      ec2_public_dns =
infrastructure.state_ec2_public_dns</span></p>

<p class=Normal1><span lang=EN-US>      dynamodb_table = infrastructure.state_dynamodb_table</span></p>

<p class=Normal1><span lang=EN-US>      s3_bucket      =
infrastructure.state_s3_bucket</span></p>

<p class=Normal1><span lang=EN-US>    </span>}</p>

<p class=Normal1>  }</p>

<p class=Normal1>}</p>

<p class=Normal1>Objetivo: A saída denominada state_infrastructure_outputs tem
como objetivo fornecer informações consolidadas sobre a infraestrutura criada
para diferentes estados (state) gerenciados pelo módulo
aws_humangov_infrastructure.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Estrutura de Dados Resultante: O resultado desta expressão for
é um objeto, pois você está usando chaves {}. Cada chave desse objeto
representa um estado (por exemplo, &quot;california&quot;, &quot;florida&quot;,
&quot;texas&quot;), e os valores associados são subobjetos que contêm
informações específicas da infraestrutura para esse estado.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Iteração sobre o Módulo: A expressão for state, infrastructure
in module.aws_humangov_infrastructure itera sobre cada estado e as informações
de infraestrutura associadas dentro do módulo aws_humangov_infrastructure.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Criação do Subobjeto para Cada Estado: Para cada iteração,
você está criando um subobjeto, onde:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>state é a chave.</p>

<p class=Normal1>ec2_public_dns, dynamodb_table e s3_bucket são os valores
associados, que são extraídos das informações de infraestrutura fornecidas pelo
módulo para esse estado específico.</p>

<p class=Normal1>Exemplo de Resultado:</p>

<p class=Normal1>Se o módulo aws_humangov_infrastructure gerar infraestrutura
para os estados &quot;california&quot;, &quot;florida&quot; e
&quot;texas&quot;, a saída pode se parecer com algo assim:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><span lang=EN-US>state_infrastructure_outputs = {</span></p>

<p class=Normal1><span lang=EN-US>  california = {</span></p>

<p class=Normal1><span lang=EN-US>    ec2_public_dns = &quot;...&quot;</span></p>

<p class=Normal1><span lang=EN-US>    dynamodb_table = &quot;...&quot;</span></p>

<p class=Normal1><span lang=EN-US>    s3_bucket      = &quot;...&quot;</span></p>

<p class=Normal1><span lang=EN-US>  }</span></p>

<p class=Normal1><span lang=EN-US>  florida = {</span></p>

<p class=Normal1><span lang=EN-US>    ec2_public_dns = &quot;...&quot;</span></p>

<p class=Normal1><span lang=EN-US>    dynamodb_table = &quot;...&quot;</span></p>

<p class=Normal1><span lang=EN-US>    s3_bucket      = &quot;...&quot;</span></p>

<p class=Normal1><span lang=EN-US>  }</span></p>

<p class=Normal1><span lang=EN-US>  texas = {</span></p>

<p class=Normal1><span lang=EN-US>    ec2_public_dns = &quot;...&quot;</span></p>

<p class=Normal1><span lang=EN-US>    </span>dynamodb_table = &quot;...&quot;</p>

<p class=Normal1>    s3_bucket      = &quot;...&quot;</p>

<p class=Normal1>  }</p>

<p class=Normal1>}</p>

<p class=Normal1>Essa saída proporciona uma maneira organizada de acessar as
informações da infraestrutura para cada estado individualmente, facilitando a
utilização desses dados em outros lugares do seu código ou para visualização e
monitoramento da infraestrutura.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Terraform apply:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=566 height=270
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image038.jpg"
alt="Tela de computador com texto preto sobre fundo branco&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Respondendo com yes prosseguimos com a construção de
recursos :</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Houve alguns erros com o bucket S3 e por substituir o código
do main.tf do modules na parte referente ao bucket S3 por:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><span lang=EN-US>resource &quot;aws_s3_bucket_acl&quot;
&quot;state_s3_acl&quot; {</span></p>

<p class=Normal1><span lang=EN-US>  bucket = aws_s3_bucket.state_s3.bucket</span></p>

<p class=Normal1><span lang=EN-US>&nbsp;</span></p>

<p class=Normal1><span lang=EN-US>  </span>acl    = &quot;private&quot;  # ou
qualquer outro valor desejado para ACL</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>  <span lang=EN-US>grants {</span></p>

<p class=Normal1><span lang=EN-US>    permissions = [&quot;FULL_CONTROL&quot;]</span></p>

<p class=Normal1><span lang=EN-US>    type        = &quot;Group&quot;</span></p>

<p class=Normal1><span lang=EN-US>    uri         =
&quot;http://acs.amazonaws.com/groups/global/AllUsers&quot;</span></p>

<p class=Normal1><span lang=EN-US>  }</span></p>

<p class=Normal1><span lang=EN-US>&nbsp;</span></p>

<p class=Normal1><span lang=EN-US>  owner {</span></p>

<p class=Normal1><span lang=EN-US>    id =
aws_caller_identity.current.account_id</span></p>

<p class=Normal1><span lang=EN-US>  }</span></p>

<p class=Normal1><span lang=EN-US>}</span></p>

<p class=Normal1><span lang=EN-US>&nbsp;</span></p>

<p class=Normal1><span lang=EN-US>resource &quot;aws_s3_bucket&quot;
&quot;state_s3&quot; {</span></p>

<p class=Normal1><span lang=EN-US>  bucket =
&quot;humangov-${var.state_name}-s3-${random_string.bucket_suffix.result}&quot;</span></p>

<p class=Normal1><span lang=EN-US>  # acl    = &quot;private&quot;</span></p>

<p class=Normal1><span lang=EN-US>&nbsp;</span></p>

<p class=Normal1><span lang=EN-US>  tags = {</span></p>

<p class=Normal1><span lang=EN-US>    Name =
&quot;humangov-${var.state_name}&quot;</span></p>

<p class=Normal1><span lang=EN-US>  </span>}</p>

<p class=Normal1>}</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Terraform apply</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Vamos ver os resultados fantásticos na console AWS que é poder
de usar yes</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=567 height=266
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image039.jpg"
alt="Texto&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Buckets S3:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=567 height=249
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image040.jpg"
alt="Interface gráfica do usuário, Texto&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>DynamoDB</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=567 height=243
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image041.jpg"
alt="Interface gráfica do usuário, Texto&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Instancias EC2:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=567 height=242
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image042.jpg"
alt="Interface gráfica do usuário, Texto, Aplicativo, Email&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Terraform destroy para remover a infra criada e não ficar
gastando créditos da AWS:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=567 height=262
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image043.jpg"
alt="Texto&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=567 height=271
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image044.jpg"
alt="Tela de computador com texto preto sobre fundo azul&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=567 height=299
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image045.jpg"
alt="Interface gráfica do usuário&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>A próxima etapa envolve armazenar de forma segura os arquivos
de configuração (*.tf) no AWS CodeCommit. Esta é outra parte crucial da
arquitetura e uma premissa adicional a ser atendida. Como estão sendo aplicadas
as práticas de DevOps e segurança no que foi implementado até agora?</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Do ponto de vista da segurança, há uma vulnerabilidade
significativa, pois o tfstate está local, dentro de uma instância utilizada
pelo engenheiro DevOps (Cloud9). Se essa instância sofrer algum incidente ou
falha, toda a integridade da infraestrutura estará em risco. Existe também a
possibilidade de exclusão acidental por parte do engenheiro DevOps. Portanto,
há um sério risco de segurança nessa abordagem.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Além disso, na cultura DevOps, é fundamental trabalhar de
maneira colaborativa. No entanto, ao lidar com arquivos locais, estamos
divergindo dessa prática. Além do tfstate, é crucial armazená-lo em um
repositório remoto no AWS CodeCommit. Também é necessário controlar o arquivo
de lock que aprendemos anteriormente, pois ele evita concorrência simultânea e
problemas de falhas.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Nesta segunda etapa, focaremos na criação de um bucket S3 na
AWS para armazenar o backend, ou seja, o estado remoto. Embora o backend possa
ser local neste momento, planejamos migrá-lo para um estado remoto, ou seja,
armazenar o estado do Terraform (tfstate) em um bucket S3 da AWS. Além disso,
criaremos uma tabela no DynamoDB para o tfstate lock, a fim de controlar a
concorrência.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>É importante lembrar que cada tabela criada na primeira parte
tinha como objetivo armazenar os dados da aplicação. Agora, teremos que criar
outra tabela no DynamoDB para gerenciar o lock. Isso proporcionará mais uma
oportunidade para revisitar, recapitular e praticar o que aprendemos durante
nossa jornada.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=567 height=300
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image046.jpg"
alt="Interface gráfica do usuário&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<h2 style='margin-left:43.35pt;text-indent:0cm'><a name="_Toc157071984">4.2 Criaçao
do bucket S3  via AWS CLI para armazenamento do terraform .tfstate de forma
remota para aumento da segurança.</a></h2>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Então agora vamos para nossa console para executarmos estas
ações :</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Obs:  O motivo pelo qual se recomenda usar a AWS CLI em vez do
Terraform para criar o bucket S3 para armazenar o estado do Terraform (tfstate)
pode ser resumido da seguinte forma:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Quando usamos o Terraform para criar recursos, como um bucket
S3, há o risco de que, ao executar um comando para remover ou destruir
(destroy) esses recursos, o próprio bucket também seja excluído acidentalmente.
Isso pode ser problemático, especialmente porque o bucket S3 armazena
informações críticas sobre o estado da infraestrutura gerenciada pelo
Terraform.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Ao usar a AWS CLI para criar o bucket, você tem mais controle
direto sobre esse processo e pode evitar que o Terraform exclua o bucket
inadvertidamente durante uma operação de destruição. Portanto, a recomendação é
separar a criação do bucket S3, uma ação crítica para o Terraform, do próprio
Terraform, usando a CLI da AWS para garantir maior segurança e evitar possíveis
problemas ao destruir recursos.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Em resumo, a abordagem sugerida visa evitar que o Terraform
destrua acidentalmente o bucket S3 que armazena seu próprio estado, tornando o
processo mais seguro e controlado ao usar a AWS CLI para criar esse recurso
específico.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Criando  bucket S3 por AWS CLI para armazenar o arquivo
terraform.tfstate </p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><span lang=EN-US>- aws s3api create-bucket --bucket
humangov-terraform-state-xvvbx --region us-east-1</span></p>

<p class=Normal1><span lang=EN-US>&nbsp;</span></p>

<p class=Normal1>Esse comando é utilizado para criar um novo bucket no serviço
de armazenamento da Amazon Web Services (AWS) chamado Amazon S3 (Simple Storage
Service). Vamos quebrar o comando para entender melhor:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>aws s3api: Este é o utilitário de linha de comando da AWS (AWS
Command Line Interface ou AWS CLI) usando o serviço S3 API, que permite
interagir com o Amazon S3 por meio da linha de comando.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>create-bucket: Este é o subcomando que especifica a ação que
você deseja realizar, que é a criação de um novo bucket no S3.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>--bucket humangov-terraform-state-xvvbx: Aqui, você está
fornecendo o nome desejado para o novo bucket. No exemplo, o nome escolhido é
&quot;humangov-terraform-state-x921&quot;. Os nomes dos buckets no S3 precisam
ser únicos em toda a AWS, então é importante escolher um nome exclusivo.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>--region us-east-1: Esta opção especifica a região da AWS onde
o bucket será criado. Neste caso, o bucket será criado na região
&quot;us-east-1&quot; (Norte da Virgínia), mas você pode substituir isso pela
região desejada.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Em resumo, o comando está instruindo a AWS CLI a criar um novo
bucket chamado &quot;humangov-terraform-state-x921&quot; na região
&quot;us-east-1&quot; usando a S3 API. Esses buckets são usados para armazenar
e gerenciar objetos, como arquivos, na nuvem da AWS.</p>

<p class=Normal1><img border=0 width=567 height=261
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image047.jpg"
alt="Interface gráfica do usuário, Gráfico&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Após limpeza de alguns buckets  criados no passado </p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=567 height=257
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image048.jpg"
alt="Texto&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Para ter mais informações sobre o bucket  que está  vazio </p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>aws s3 ls s3://humangov-terraform-state-xvvbx</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>O comando aws s3 ls s3://humangov-terraform-state-xvvbx é
utilizado na AWS Command Line Interface (AWS CLI) para listar o conteúdo de um
bucket no Amazon S3. Vamos quebrar o comando em partes para entender melhor:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>aws: O utilitário de linha de comando da AWS.</p>

<p class=Normal1>s3: O serviço Amazon S3 (Simple Storage Service).</p>

<p class=Normal1>ls: O subcomando para listar objetos no S3.</p>

<p class=Normal1>s3://humangov-terraform-state-xvvbx: O URL do bucket no qual
você deseja listar os objetos. Neste caso, o bucket é chamado
&quot;humangov-terraform-state-xvvbx&quot;.</p>

<p class=Normal1>Então, o comando solicita ao S3 que liste todos os objetos
(arquivos ou diretórios) no bucket &quot;humangov-terraform-state-xvvbx&quot;.
O resultado mostrará informações como o nome do objeto, o tamanho, a data da
última modificação, entre outros detalhes.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Por exemplo, a saída pode se parecer com algo assim:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>2022-01-23 15:30:00       1024 arquivo1.txt</p>

<p class=Normal1>2022-01-23 15:31:00       2048 arquivo2.txt</p>

<p class=Normal1>...</p>

<p class=Normal1>Essa saída listará os objetos dentro do bucket
&quot;humangov-terraform-state-xvvbx&quot;, exibindo o nome do objeto, a data
da última modificação e o tamanho em bytes.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Como o arquivo está vazio a resposta não tem nenhum arquivo </p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=566 height=262
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image049.jpg"
alt="Interface gráfica do usuário, Texto&#10;&#10;Descrição gerada automaticamente"></p>

<p class=MsoNormal>&nbsp;</p>

<h2 style='margin-left:43.35pt;text-indent:0cm'><a name="_Toc157071985">4.3 Criação 
da tabela DynamoDB via AWS CLI  para controle do Lock para evitar modificação
simultânea de forma remota para aumento da segurança.</a></h2>

<p class=MsoNormal>&nbsp;</p>

<p class=Normal1>Vamos criar o nosso DynamoDB e para isto irei copiar de nossa
documentação:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Note que a configuração backend.tf também especifica uma
tabela DynamoDB (terraform-lock-table) para o bloqueio de estado. O bloqueio de
estado ajuda a evitar a modificação simultânea do arquivo de estado, o que pode
levar à corrupção. Como queremos usar o bloqueio de estado, vamos criar a
tabela DynamoDB manualmente:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Relembrando:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>O arquivo backend.tf não é criado automaticamente pelo
Terraform e, geralmente, é criado pelos usuários para especificar as
configurações do backend. Você precisa criá-lo manualmente no diretório onde
você está executando seus comandos do Terraform.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Aqui estão algumas etapas para criar o arquivo backend.tf:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Crie um Novo Arquivo:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Abra seu editor de texto favorito (por exemplo, VSCode,
Sublime Text, Notepad++).</p>

<p class=Normal1>Insira as Configurações do Backend:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Insira as configurações do backend no arquivo. Aqui está um
exemplo básico usando o Amazon S3 como backend e DynamoDB para bloqueio de
estado:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><span lang=EN-US>terraform {</span></p>

<p class=Normal1><span lang=EN-US>  backend &quot;s3&quot; {</span></p>

<p class=Normal1><span lang=EN-US>    bucket         =
&quot;my-terraform-state-bucket&quot;</span></p>

<p class=Normal1><span lang=EN-US>    key            =
&quot;terraform.tfstate&quot;</span></p>

<p class=Normal1><span lang=EN-US>    region         = &quot;us-east-1&quot;</span></p>

<p class=Normal1><span lang=EN-US>    encrypt        = true</span></p>

<p class=Normal1><span lang=EN-US>    dynamodb_table = &quot;humangov-terraform-state-lock-table&quot;</span></p>

<p class=Normal1><span lang=EN-US>  </span>}</p>

<p class=Normal1>}</p>

<p class=Normal1>Lembre-se de ajustar os valores para corresponder à sua
configuração específica, como o nome do bucket, a região, etc.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Salve o Arquivo:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Salve o arquivo com o nome backend.tf no diretório do seu
projeto do Terraform.</p>

<p class=Normal1>Depois de criar o arquivo backend.tf, o Terraform usará essas
configurações do backend quando você executar os comandos, como terraform init
e terraform apply.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Certifique-se de revisar a documentação oficial do Terraform
para obter mais informações sobre as configurações do backend e como
configurá-las: Configuração do Backend do Terraform</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><span lang=EN-US>aws dynamodb create-table \</span></p>

<p class=Normal1><span lang=EN-US>  --table-name
humangov-terraform-state-lock-table \</span></p>

<p class=Normal1><span lang=EN-US>  --attribute-definitions
AttributeName=LockID,AttributeType=S \</span></p>

<p class=Normal1><span lang=EN-US>  --key-schema
AttributeName=LockID,KeyType=HASH \</span></p>

<p class=Normal1><span lang=EN-US>  --provisioned-throughput
ReadCapacityUnits=5,WriteCapacityUnits=5 \</span></p>

<p class=Normal1><span lang=EN-US>  --region us-east-1</span></p>

<p class=Normal1><span lang=EN-US>&nbsp;</span></p>

<p class=Normal1>Explicação:</p>

<p class=Normal1>Este comando AWS CLI está sendo usado para criar uma tabela no
serviço DynamoDB da Amazon, e essa tabela é projetada para armazenar
informações de bloqueio do Terraform. Vamos analisar cada parte do comando:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>aws dynamodb create-table:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>aws: Indica que você está usando a AWS CLI.</p>

<p class=Normal1>dynamodb: Especifica que a operação será realizada no serviço
DynamoDB.</p>

<p class=Normal1>create-table: Indica que você está criando uma nova tabela no
DynamoDB.</p>

<p class=Normal1><span lang=EN-US>--table-name
humangov-terraform-state-lock-table:</span></p>

<p class=Normal1><span lang=EN-US>&nbsp;</span></p>

<p class=Normal1>--table-name: Define o nome da tabela que será criada.</p>

<p class=Normal1>humangov-terraform-state-lock-table: É o nome que você
escolheu para a tabela, neste caso, relacionado ao gerenciamento do estado do
Terraform.</p>

<p class=Normal1><span lang=EN-US>--attribute-definitions
AttributeName=LockID,AttributeType=S:</span></p>

<p class=Normal1><span lang=EN-US>&nbsp;</span></p>

<p class=Normal1>--attribute-definitions: Define os atributos que a tabela
conterá.</p>

<p class=Normal1>AttributeName=LockID,AttributeType=S: Aqui, você está criando
um atributo chamado &quot;LockID&quot; que armazenará uma string. No contexto
do Terraform, esse atributo provavelmente será usado para identificar o recurso
que está sendo bloqueado.</p>

<p class=Normal1><span lang=EN-US>--key-schema
AttributeName=LockID,KeyType=HASH:</span></p>

<p class=Normal1><span lang=EN-US>&nbsp;</span></p>

<p class=Normal1>--key-schema: Especifica a chave primária da tabela, que é
usada para indexar os dados.</p>

<p class=Normal1>AttributeName=LockID,KeyType=HASH: Configura a chave primária
usando o atributo &quot;LockID&quot; como uma chave de dispersão (HASH). No
DynamoDB, a chave de dispersão é usada para distribuir os itens na tabela.</p>

<p class=Normal1>--provisioned-throughput
ReadCapacityUnits=5,WriteCapacityUnits=5:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>--provisioned-throughput: Define a capacidade de leitura e
gravação provisória da tabela.</p>

<p class=Normal1>ReadCapacityUnits=5,WriteCapacityUnits=5: Configura a tabela
para suportar até 5 operações de leitura e 5 operações de gravação por segundo.
Isso é relevante para garantir um desempenho adequado ao lidar com bloqueios de
estado em ambientes de infraestrutura.</p>

<p class=Normal1>--region us-east-1:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>--region: Define a região da AWS onde a tabela será criada.</p>

<p class=Normal1>us-east-1: Neste exemplo, a região é configurada como
&quot;us-east-1&quot;.</p>

<p class=Normal1>Explicação Adicional:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>No contexto do Terraform, o arquivo de bloqueio
(terraform.tfstate) é fundamental para rastrear o estado da infraestrutura
gerenciada. O uso de uma tabela DynamoDB para bloqueio é uma prática
recomendada para garantir que apenas uma operação de modificação seja realizada
por vez, evitando possíveis conflitos.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>O atributo &quot;LockID&quot; é útil para identificar qual
recurso específico está sendo bloqueado, permitindo que o Terraform gerencie os
bloqueios de maneira mais granular.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>A capacidade de leitura e gravação da tabela (provisioned
throughput) é configurada para garantir um desempenho adequado, especialmente
em ambientes onde várias operações podem estar ocorrendo simultaneamente.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Em resumo, a tabela DynamoDB é configurada com atributos
específicos e capacidade para suportar o controle de bloqueio do Terraform,
garantindo a integridade e consistência do estado da infraestrutura na nuvem.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><span lang=EN-US>Resultado:</span></p>

<p class=Normal1><span lang=EN-US>&nbsp;</span></p>

<p class=Normal1><img border=0 width=567 height=239
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image050.jpg"
alt="Interface gráfica do usuário, Aplicativo&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1><span lang=EN-US>&nbsp;</span></p>

<p class=Normal1>Baseado no que estudamos o que precisamos criar agora ? o
nosso estado que esta local passe a ser remoto ? se você colocou que  precisamos
criar o arquivo <b>backend.tf</b> você acertou. Vamos acessar nossa pasta
(human-gov-infrastructure e dentro dela a pasta root Terraform.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=567 height=259
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image051.jpg"
alt="Tela de computador&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Vamos executar o nosso terraform init</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=567 height=253
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image052.jpg"
alt="Tela de computador com texto preto sobre fundo branco&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Vamos dar um terraform validate:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=568 height=257
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image053.jpg"
alt="Interface gráfica do usuário, Texto&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>E em seguida, ao executar o comando 'terraform plan', ele
revisará todas as etapas que realizamos, criando todos os recursos e
transferindo o controle do backend do controle local para o armazenamento no
bucket S3 e na tabela DynamoDB.</p>

<p class=Normal1><img border=0 width=567 height=255
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image054.jpg"
alt="Interface gráfica do usuário, Texto&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>E o lock já <b>não está aparecendo</b> localmente nos arquivos
do lado esquerdo:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>E em sequência o terraform apply</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=566 height=257
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image055.jpg"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Vamos dar um refresh  em nossa tabela dynamoDB:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=567 height=245
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image056.jpg"
alt="Interface gráfica do usuário, Aplicativo&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>E no bucket s3 quer devera já estar com o arquivo
terraform.tfstate:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=566 height=253
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image057.jpg"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=567 height=241
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image058.jpg"
alt="Interface gráfica do usuário, Texto, Aplicativo&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Pelo AWS CLI também pode-se ver que o bucket s3 contém agora o
arquivo de estado terraform.tfsate e o a tabela dynamoDB contém o controle do
lock. (evitar que concorrência de alterações cause erros).</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=566 height=269
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image059.jpg"
alt="Tela de computador&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Se abrirmos nosso terraform.tfstate local, veremos que está
vazio, uma vez que este local já não está mais em uso.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Para avançarmos e demonstrarmos isso na prática, vamos
realizar o seguinte procedimento: executaremos o comando 'terraform destroy'.
Tanto na adição quanto na destruição de recursos, o arquivo de lock é
utilizado:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=567 height=260
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image060.jpg"
alt="Interface gráfica do usuário, Texto, Aplicativo&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=567 height=269
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image061.jpg"
alt="Tela de computador com texto preto sobre fundo branco&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>O que iremos fazer ? vamos criar recursos somente em um 
estado  (estado da California).</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=567 height=256
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image062.jpg"
alt="Tela de computador&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Vamos acompanhar estes passos para ver o que irá ocorrer. E
vamos dar um terraform apply:</p>

<p class=Normal1>Será criado  recursos somente  para o estado da California e serão
 5 recursos pois estamos gerando para um único estado (California).</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=567 height=259
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image063.jpg"
alt="Texto&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Abrindo novamente o terraform.tfstate você vê que ele continua
vazio localmente :</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=567 height=249
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image064.jpg"
alt="Tela de computador&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Vamos agora executar o terrafrom destroy para remover esta infraestrutura
criada </p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=568 height=259
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image065.jpg"
alt="Interface gráfica do usuário, Texto&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Vamos ver se os recursos foram removidos  na console:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Foi removida a instancia EC2 ligado à aplicação:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=567 height=244
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image066.jpg"
alt="Interface gráfica do usuário, Texto, Aplicativo&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Foi removido buckets S3  ligado à aplicação:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=567 height=247
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image067.jpg"
alt="Interface gráfica do usuário, Texto&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Foi  removido tabela  DynamosDB ligado a aplicação:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=567 height=235
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image068.jpg"
alt="Interface gráfica do usuário, Texto, Aplicativo&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Vamos também remover os recursos criados na mão :</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>DynamoDB criado para armazenar a tabela de controle de Lock:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=566 height=254
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image069.jpg"
alt="Interface gráfica do usuário, Aplicativo&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=567 height=283
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image070.jpg"
alt="Interface gráfica do usuário, Texto&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=566 height=258
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image071.jpg"
alt="Interface gráfica do usuário, Texto, Aplicativo, Email&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Bucket S3 criado para armazenar terraform.tfstate</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=568 height=243
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image072.jpg"
alt="Interface gráfica do usuário, Aplicativo&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Esvaziado o bucket  antes :</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=567 height=245
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image073.jpg"
alt="Interface gráfica do usuário, Texto, Aplicativo&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=566 height=256
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image074.jpg"
alt="Interface gráfica do usuário, Aplicativo&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=567 height=242
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image075.jpg"
alt="Interface gráfica do usuário, Texto, Aplicativo, Site&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Agora voltamos a deletar o bucket já que se encontra vazio:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=566 height=244
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image076.jpg"
alt="Interface gráfica do usuário&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=566 height=245
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image077.jpg"
alt="Interface gráfica do usuário, Texto, Aplicativo&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1> </p>

<p class=Normal1><img border=0 width=567 height=263
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image078.jpg"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<h2 style='margin-left:43.35pt;text-indent:0cm'><a name="_Toc157071986">4.4 Salvamento
dos arquivos de configuração *.tf num repositório remoto do Code Commit   por
segurança.</a></h2>

<p class=MsoNormal>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=568 height=309
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image079.jpg"
alt="Interface gráfica do usuário&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Agora que cuidamos da segurança do tfstate e do lock, é
necessário armazenar os arquivos de configuração no Code Commit. Em outras
palavras, precisamos fazer o 'push' desses arquivos de configuração para o Code
Commit para permitir um trabalho colaborativo. Para isso, é necessário estar
dentro do nosso diretório de trabalho ('work directory'). No entanto, antes
disso, vamos garantir que tudo esteja correto usando o comando 'terraform show':</p>

<p class=Normal1><img border=0 width=567 height=258
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image080.jpg"
alt="Texto&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Houve um erro porque o bucket S3 que armazena o
terraform-tfstate, chamado 'humangov-terraform-state-xvvbx', foi removido
(vamos recriá-lo ao final para gerar evidências do trabalho concluído), via
console, para evitar o consumo de recursos da AWS.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Agora, precisamos fazer o push dos arquivos. Para realizar o
push, iremos enviá-los para o Code Commit. Se acessarmos o repositório
'human-gov-infrastructure', perceberemos que na seção 'Code' não há nada, pois
ainda não fizemos o push e não estamos utilizando as práticas DevOps para
trabalhar de forma colaborativa.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>No entanto, precisamos fazer o push dos arquivos que estão
dentro da nossa pasta do Terraform.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=566 height=243
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image081.jpg"
alt="Interface gráfica do usuário&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=567 height=245
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image082.jpg"
alt="Interface gráfica do usuário, Texto, Aplicativo&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=566 height=243
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image083.jpg"
alt="Interface gráfica do usuário, Texto, Aplicativo&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>      Temos os módulos e os arquivos, no entanto, existem
alguns arquivos que não fazem sentido serem incluídos no push para o nosso
repositório no AWS Code Commit. Por quê? Por exemplo, quando executamos o
'terraform init', ele faz o download da pasta '.terraform' (uma pasta oculta)
que contém arquivos do plugin. Esses arquivos são baixados para a máquina ou
instância em questão, permitindo que ela execute o Terraform conforme
necessário pelos providers. Portanto, não faz sentido incluir isso no push, uma
vez que tem um escopo local. </p>

<p class=Normal1><img border=0 width=567 height=251
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image084.jpg"
alt="Interface gráfica do usuário, Texto&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Da mesma forma, o 'terraform.tfstate.backup' só tem escopo
local, assim como o próprio 'terraform.tfstate', que pode não estar sendo usado
localmente também.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Portanto, quando mencionamos mover os arquivos de
configuração, estamos nos referindo aos arquivos com extensão '.tf', e caso
haja uma pasta chamada 'modules', ela também deve ser levada, pois faz parte do
processo. Alguns arquivos não precisam ser enviados, pois não faz sentido
compartilhar esse tipo de arquivo. Neste ponto, surge a pergunta: como podemos
ignorar esses arquivos? O procedimento comum é usar 'git add .' para incluir
todos os arquivos. No entanto, iremos criar um arquivo oculto chamado '.gitignore'
para especificamente ignorar esses arquivos. Antes disso, no entanto, gostaria
de mostrar o processo sem ignorar os arquivos.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Para isso, preciso navegar até a pasta do nosso diretório de
trabalho ('work directory').</p>

<p class=Normal1><img border=0 width=566 height=268
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image085.jpg"
alt="Interface gráfica do usuário, Texto&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Vamos dar um ls -la  (mostrar arquivos ocultos no Linux) </p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=566 height=262
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image086.jpg"
alt="Interface gráfica do usuário&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Nos  precisamos  estar dentro da pasta que contém do
repositório  do git (.git) e, portanto, este é meu work directory . Uma vez
dentro desta pasta você vai digitar um git status para ver como está o status
do git :</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=567 height=267
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image087.jpg"
alt="Texto&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Nós temos a pasta do terraform para poder ser adicionada .
Vamos a princípio dar um git add . para adicionar tudo que está dentro desta
pasta para dentro do meu repositório do git .</p>

<p class=Normal1><img border=0 width=567 height=254
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image088.jpg"
alt="Texto&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Observação: Todos os arquivos foram adicionados, incluindo os
provedores da AWS, provedores random, o arquivo 'terraform.tfstate.backup',
etc. Todos esses arquivos foram movidos para a área de stage. No entanto, isso
não é o que desejamos. Não queremos que todos os arquivos sigam para o stage.
Queremos que alguns arquivos sejam ignorados. Podemos até mesmo utilizar o
comando 'git rm --cached &lt;arquivo&gt;' para desfazer o staging de arquivos.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Vamos utilizar este comando para remover todos os arquivos da
área de stage.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=567 height=262
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image089.jpg"
alt="Texto&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>- git status </p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=567 height=250
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image090.jpg"
alt="Interface gráfica do usuário&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Revertendo todas as alterações para o estado normal, sem
nenhum arquivo na área de stage:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Agora, iniciaremos o processo de '.gitignore' (um arquivo
oculto) para adicionar à lista os arquivos que não desejamos incluir no push.
Este arquivo está localizado dentro da pasta 'human-gov-infrastructure', no
mesmo nível que o meu diretório '.git'</p>

<p class=Normal1><img border=0 width=567 height=252
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image091.jpg"
alt="Texto&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Nós temos que adicionar algumas entradas dentro deste arquivo
:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Para mostrar  o arquivo oculto .gitignore  no File Tree  na
esquerda :</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=566 height=259
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image092.jpg"
alt="Tela de computador&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=568 height=256
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image093.jpg"
alt="Interface gráfica do usuário&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Observação: Eu tenho a pasta do Terraform e a do gitignore. O
git  vai adicionar o gitignore, mas você terá um histórico, uma rastreabilidade
do que está sendo ignorado. Vamos executar um 'git add .' que é o nosso
objetivo, ou seja, adicionar tudo, exceto o que está sendo ignorado.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=567 height=253
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image094.jpg"
alt="Texto&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Observação: O que está especificado no 'gitignore' não será
copiado nem enviado para a área de stage. Portanto, faremos o push apenas dos
arquivos que foram para a area de stage os quais não incluem os arquivos que
estão dentro do .gitignore.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Chegou a hora de executarmos o 'git commit' para retirar do
stage e adicionar todos os arquivos abaixo:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=567 height=260
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image095.jpg"
alt="Texto&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Agora vamos fazer o git push para que se processe o upload
de todos estes arquivos para dentro do Code Commit.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=568 height=253
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image096.jpg"
alt="Interface gráfica do usuário, Texto, Aplicativo&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Vamos a console a AWS no Code Commit para ver se os arquivos
que foram copiados para la:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=566 height=246
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image097.jpg"
alt="Tela de computador com texto preto sobre fundo branco&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>e</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=567 height=236
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image098.jpg"
alt="Interface gráfica do usuário, Aplicativo&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Observação: podemos visualizar as entradas que solicitamos
para serem ignoradas, proporcionando um controle rastreável dos arquivos que
não foram submetidos ao 'push'.</p>

<p class=MsoNormal>&nbsp;</p>

<h2 style='margin-left:61.35pt'><a name="_Toc157071987">4.5<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span>Geração de evidências do
projeto :</a></h2>

<p class=MsoNormal>&nbsp;</p>

<p class=Normal1>Nós iremos ter que coletar algumas evidências para poder ser
aprovado neste projeto:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>- Vamos entrar dentro do nosso diretório root
(human-gov-infrastructure/terraform)  e dar o comando terraform apply</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=566 height=254
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image099.jpg"
alt="Texto&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>Observação: Os recursos serão criados apenas para um estado
('California'), e precisaremos coletar algumas informações, tais como:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>- EC2</p>

<p class=Normal1>- S3</p>

<p class=Normal1>- DynamoDB</p>

<p class=Normal1>- Code Commit </p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1> 1 - Primeira evidencia : tela do Code Commit do repositório human-gov-infrastructure/terraform</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=568 height=239
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image100.jpg"
alt="Interface gráfica do usuário, Texto, Aplicativo&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>2  Instancia criada da California:</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=567 height=246
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image101.jpg"
alt="Interface gráfica do usuário, Texto, Aplicativo&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>3  Buckets S3 criado para acomodar arquivo terraform.tfstate
e outro para a aplicação SaaS do estado da California :</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=566 height=250
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image102.jpg"
alt="Interface gráfica do usuário, Aplicativo&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>4  DynamoDB criado para acomodar o controle do lock e outro
da aplicação SaaS do estado da California :</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=566 height=240
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image103.jpg"
alt="Interface gráfica do usuário, Aplicativo&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>5  Tela do terraform destroy para remover toos os recursos
criados pelo Terraform.</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=567 height=247
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image104.jpg"
alt="Interface gráfica do usuário, Texto, Aplicativo&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=566 height=261
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image105.jpg"
alt="Texto&#10;&#10;Descrição gerada automaticamente"></p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1>&nbsp;</p>

<p class=Normal1><img border=0 width=1 height=4 id="Imagem 1"
src="Hands%20On%20Cloud%20BootCamp%20Modulo%203%20-%20Terraform_arquivos/image106.png"></p>

<p class=Normal1>&nbsp;</p>

</div>

</body>

</html>
